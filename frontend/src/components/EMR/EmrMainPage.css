// src/components/EMR/EmrMainPage.jsx - 영상검사 요청 패널 추가
import React, { useState } from 'react';
import Sidebar from './Sidebar';
import ChartHeader from './ChartHeader';
import WaitingRoom from './WaitingRoom';
import PatientInfoPanel from './PatientInfoPanel';
import VisitHistoryPanel from './VisitHistoryPanel';
import DiagnosisPanel from './DiagnosisPanel';
import PatientDetailModal from './PatientDetailModal';
// import ImagingRequestPanel from './ImagingRequestPanel'; // 일단 주석 처리

const EmrMainPage = () => {
  const [activeTab, setActiveTab] = useState('진료');
  const [selectedPatient, setSelectedPatient] = useState(null);
  const [assignedPatients, setAssignedPatients] = useState({ 1: null, 2: null });
  const [isModalOpen, setIsModalOpen] = useState(false);

  const assignToRoom = (roomNumber) => {
    if (!selectedPatient) return;
    setAssignedPatients((prev) => ({ ...prev, [roomNumber]: selectedPatient }));
    setSelectedPatient(null);
  };

  const openModal = () => {
    if (!selectedPatient) return;
    setIsModalOpen(true);
  };

  const closeModal = () => setIsModalOpen(false);

  const renderTabContent = () => {
    if (activeTab === '홈') {
      return (
        <div style={pageContainerStyle}>
          <h2 style={pageTitleStyle}>🏠 홈 화면</h2>
          <div style={cardStyle}>
            <p>이곳은 홈 탭입니다. 시스템 공지, 최근 진료 요약 등을 표시할 수 있습니다.</p>
          </div>
        </div>
      );
    }
    if (activeTab === '설정') {
      return (
        <div style={pageContainerStyle}>
          <h2 style={pageTitleStyle}>⚙️ 설정 페이지</h2>
          <div style={cardStyle}>
            <p>사용자 환경 설정, 권한 관리 등의 기능이 들어갈 수 있습니다.</p>
          </div>
        </div>
      );
    }

    return (
      <div style={pageContainerStyle}>
        <ChartHeader onSearch={setSelectedPatient} />

        <div style={cardGridStyle}>
          <div style={cardStyle}>
            <h3 style={cardTitleStyle}>🧑‍⚕️ 진료실 배정</h3>
            <WaitingRoom
              selectedPatient={selectedPatient}
              assignToRoom={assignToRoom}
              assignedPatients={assignedPatients}
            />
          </div>

          <div style={cardStyle}>
            <h3 style={cardTitleStyle}>📄 환자 정보</h3>
            {selectedPatient ? (
              <PatientInfoPanel
                patient={selectedPatient}
                onOpenDetailModal={openModal}
              />
            ) : (
              <p style={emptyTextStyle}>환자를 선택해주세요.</p>
            )}
          </div>

          {/* 🔥 새로 추가: 영상검사 요청 패널 - 임시로 간단한 폼 */}
          <div style={cardStyle}>
            <h3 style={cardTitleStyle}>🏥 영상검사 요청</h3>
            {selectedPatient ? (
              <div>
                <p><strong>환자:</strong> {selectedPatient.display}</p>
                <div style={{ marginTop: '10px' }}>
                  <select style={{ width: '100%', padding: '8px', marginBottom: '8px' }}>
                    <option value="">검사 종류 선택</option>
                    <option value="CR">Chest X-ray</option>
                    <option value="CT">CT Scan</option>
                    <option value="MR">MRI</option>
                    <option value="US">Ultrasound</option>
                  </select>
                  <select style={{ width: '100%', padding: '8px', marginBottom: '8px' }}>
                    <option value="">검사 부위 선택</option>
                    <option value="CHEST">CHEST</option>
                    <option value="ABDOMEN">ABDOMEN</option>
                    <option value="HEAD">HEAD</option>
                    <option value="SPINE">SPINE</option>
                  </select>
                  <button 
                    style={{ 
                      width: '100%', 
                      padding: '10px', 
                      backgroundColor: '#28a745', 
                      color: 'white', 
                      border: 'none', 
                      borderRadius: '4px',
                      cursor: 'pointer'
                    }}
                    onClick={() => {
                      console.log('🏥 영상검사 요청 (임시)');
                      alert('영상검사 요청 기능을 구현중입니다!');
                    }}
                  >
                    🏥 영상검사 요청
                  </button>
                </div>
              </div>
            ) : (
              <p style={emptyTextStyle}>환자를 선택해주세요.</p>
            )}
          </div>

          <div style={cardStyle}>
            <h3 style={cardTitleStyle}>📁 내원 기록</h3>
            {assignedPatients[1] ? (
              <VisitHistoryPanel patient={assignedPatients[1]} />
            ) : (
              <p style={emptyTextStyle}>환자가 배정되지 않았습니다.</p>
            )}
          </div>

          <div style={cardStyle}>
            <h3 style={cardTitleStyle}>🧠 AI 진단 및 판독</h3>
            {assignedPatients[1] ? (
              <DiagnosisPanel patient={assignedPatients[1]} />
            ) : (
              <p style={emptyTextStyle}>환자가 배정되지 않았습니다.</p>
            )}
          </div>
        </div>

        {isModalOpen && (
          <PatientDetailModal
            patient={selectedPatient}
            onClose={closeModal}
          />
        )}
      </div>
    );
  };

  return (
    <div style={{ display: 'flex', alignItems: 'flex-start', minHeight: '100vh', backgroundColor: '#f9f9f9' }}>
      <Sidebar activeTab={activeTab} setActiveTab={setActiveTab} />
      <div style={{ flexGrow: 1 }}>{renderTabContent()}</div>
    </div>
  );
};

const pageContainerStyle = {
  padding: '2rem',
  width: '100%',
  boxSizing: 'border-box',
};

const cardGridStyle = {
  display: 'grid',
  gridTemplateColumns: 'repeat(auto-fit, minmax(280px, 1fr))',
  gap: '1rem',
  marginTop: '1rem'
};

const cardStyle = {
  border: '1px solid #ddd',
  borderRadius: '8px',
  padding: '1.5rem',
  backgroundColor: '#fff',
  boxShadow: '0 2px 6px rgba(0,0,0,0.05)',
  transition: 'box-shadow 0.2s ease',
  minHeight: '200px'
};

const cardTitleStyle = {
  marginTop: 0,
  fontSize: '18px',
  fontWeight: 'bold',
  color: '#333',
  display: 'flex',
  alignItems: 'center',
  gap: '0.5rem',
  marginBottom: '1rem'
};

const pageTitleStyle = {
  fontSize: '24px',
  fontWeight: 'bold',
  marginBottom: '1.5rem',
  color: '#333',
  display: 'flex',
  alignItems: 'center',
  gap: '0.5rem'
};

const emptyTextStyle = {
  fontStyle: 'italic',
  color: '#888',
  fontSize: '14px'
};

export default EmrMainPage;