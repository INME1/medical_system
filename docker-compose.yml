services:
  # OpenMRS MySQL - 연결 안정성 강화
  openmrs-mysql:
    image: mysql:5.7
    container_name: openmrs-mysql
    environment:
      MYSQL_ROOT_PASSWORD: Admin123
      MYSQL_DATABASE: openmrs
      MYSQL_USER: openmrs
      MYSQL_PASSWORD: Admin123
      MYSQL_CHARSET: utf8
      MYSQL_COLLATION: utf8_general_ci
    ports:
      - "3307:3306"
    volumes:
      - openmrs_mysql_data:/var/lib/mysql
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - medical-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pAdmin123"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s
    command: [
      "--character-set-server=utf8",
      "--collation-server=utf8_general_ci",
      "--sql-mode=STRICT_TRANS_TABLES,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION",
      "--max-connections=500",
      "--innodb-buffer-pool-size=512M"
    ]

  # OpenMRS Web Application - MySQL 연결 대기 및 설정 강화
  openmrs-server:
    image: openmrs/openmrs-reference-application-distro:latest
    container_name: openmrs-server
    depends_on:
      openmrs-mysql:
        condition: service_healthy
    environment:
      DB_DATABASE: openmrs
      DB_HOST: openmrs-mysql
      DB_PORT: 3306
      DB_USERNAME: openmrs
      DB_PASSWORD: Admin123
      DB_CREATE_TABLES: "true"
      DB_AUTO_UPDATE: "true"
      MODULE_WEB_ADMIN: "true"
      OMRS_CONFIG_MODULE_WEB_ADMIN: "true"
      OMRS_CONFIG_ADD_DEMO_DATA: "true"
      OMRS_CONFIG_MYSQL_HOST: openmrs-mysql
      OMRS_CONFIG_MYSQL_USERNAME: openmrs
      OMRS_CONFIG_MYSQL_PASSWORD: Admin123
      OMRS_CONFIG_CREATE_TABLES: "true"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "true"
      OMRS_CONFIG_HAS_CURRENT_OPENMRS_DATABASE: "true"
      OMRS_CONFIG_CREATE_DATABASE_USER: "false"
    ports:
      - "8082:8080"
    volumes:
      - openmrs_data:/openmrs/data
      - openmrs_modules:/openmrs/modules
      - openmrs_owa:/openmrs/owa
    networks:
      - medical-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/openmrs/login.htm"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s

  # MariaDB (메인 애플리케이션용)
  mariadb:
    image: mariadb:10.11
    container_name: mariadb-server
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: medical_platform
      MYSQL_USER: medical_user
      MYSQL_PASSWORD: medical_password
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - medical-network
    restart: unless-stopped

  # PostgreSQL (Orthanc용)
  orthanc-postgres:
    image: postgres:14
    container_name: orthanc-postgres
    environment:
      POSTGRES_DB: orthanc
      POSTGRES_USER: orthanc
      POSTGRES_PASSWORD: orthanc
    ports:
      - "5432:5432"
    volumes:
      - orthanc_postgres_data:/var/lib/postgresql/data
    networks:
      - medical-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U orthanc -d orthanc"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Orthanc DICOM Server
  orthanc:
    image: jodogne/orthanc-plugins:latest
    container_name: orthanc-server
    depends_on:
      orthanc-postgres:
        condition: service_healthy
    ports:
      - "8042:8042"
      - "4242:4242"
    volumes:
      - orthanc_data:/var/lib/orthanc/db
      - ./orthanc-config/orthanc.json:/etc/orthanc/orthanc.json:ro
    networks:
      - medical-network
    restart: unless-stopped

  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: mongodb-server
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - medical-network
    restart: unless-stopped

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    depends_on:
      - mariadb
    environment:
      PMA_HOST: mariadb
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: rootpassword
    ports:
      - "8080:80"
    networks:
      - medical-network
    restart: unless-stopped

networks:
  medical-network:
    driver: bridge

volumes:
  openmrs_mysql_data:
  openmrs_data:
  openmrs_modules:
  openmrs_owa:
  mariadb_data:
  orthanc_postgres_data:
  orthanc_data:
  mongodb_data:
